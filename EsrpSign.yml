parameters:
  - name: "buildOutputPath"
    default: "$(Build.ArtifactStagingDirectory)\\build"
  - name: "signOutputPath"
    default: "$(Build.ArtifactStagingDirectory)\\signed"
  - name: "certificateId"
    default: "CP-230012"
  - name: "pattern"
    default: "*.dll,*.exe"

steps:
- task: UseDotNet@2
  displayName: 'Install .NET Core sdk 2.x for ESRP'
  inputs:
    version: 2.x

- template: template-compliance/authenticode-sign.yml
  parameters:
    buildOutputPath: ${{ parameters.buildOutputPath }}
    signOutputPath: ${{ parameters.signOutputPath }}
    pattern: ${{ parameters.pattern }}
    certificateId: ${{ parameters.certificateId }}
  condition: or(eq('${{ parameters.certificateId }}', 'CP-230012'), eq('${{ parameters.certificateId }}', 'CP-231522'))

- template: template-compliance/nuget-sign.yml
  condition: eq('${{ parameters.certificateId }}', 'CP-401405')

- task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
  displayName: Sign files
  inputs:
    ConnectedServiceName: pwshSigning
    FolderPath: '${{ parameters.buildOutputPath }}'
    UseMinimatch: false
    signConfigType: inlineSignParams
    inlineOperation: $(EsrpJson)
    Pattern: ${{ parameters.pattern }}
  condition: and(and(and(succeeded(), eq(variables['Build.Reason'], 'Manual')), ne(variables['SkipSigning'], 'True')), ne(variables['SigningServer'], ''))
  timeoutInMinutes: 30

- pwsh: |
    Write-Verbose "BUILD_OUTPUT_PATH- ${{ parameters.buildOutputPath }}" -Verbose
    Write-Verbose "SIGNED_OUTPUT_PATH- ${{ parameters.signOutputPath }}" -Verbose
    Copy-Item -Path ${{ parameters.buildOutputPath }}\* -Dest ${{ parameters.signOutputPath }}\ -Recurse -Force -Verbose
  displayName: Copy signed files to signed output directory
  condition: and(and(and(succeeded(), eq(variables['Build.Reason'], 'Manual')), ne(variables['SkipSigning'], 'True')), ne(variables['SigningServer'], ''))
  timeoutInMinutes: 10

